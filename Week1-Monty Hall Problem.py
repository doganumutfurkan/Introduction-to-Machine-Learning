# -*- coding: utf-8 -*-
"""Week1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1znmIZW5QlOZ8rS1S6EbULcnidId2UeQI
"""

"""
Monty Hall Problem: 
Suppose you're on a game show, and you're given the choice of three 
doors: Behind one door is a car; behind the others, goats. You pick a door, say 
No. 1, and the host, who knows what's behind the doors, opens another door, say 
No. 3, which has a goat. He then says to you, "Do you want to pick door No. 2?" 
Is it to your advantage to switch your choice? (Source: https://en.wikipedia.org
/wiki/Monty_Hall_problem)

Algorithm:
1-Define an array which includes 3 elements: two goats and
one car. The picking state should be random.
2-Pick one of the arrays element (1000 times with no changing option and another
 1000 times with using changing option) and increment the statistic variable.
3-Get average of statistic.
"""
import random
import numpy as np
doors = ["car","goat","goat"]
statistic = index = 0

#First condition (3 door options)
for i in range(1000):
  index = random.randint(0,2)
  if(doors[index]=="car"):
    statistic += 1
print("Possibility of choosing car is:", 100*statistic/1000)

#Second condition (After one door opens which contains a goat.)
statistic = 0
doors.remove("goat")
doors.append("car") #We have to choose one option in three options. Therefore, I
#added another "car" element into array. 
for i in range(1000):
  index = random.randint(0,2)
  if(doors[index]=="car"):
    statistic +=1
print("After one door eliminated, possibility of choosing car is:", 100*statistic/1000)

"""
SAMPLE OUTPUT:
Possibility of choosing car is: 34.9
After one door eliminated, possibility of choosing car is: 67.0
"""

